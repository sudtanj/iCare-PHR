@startuml

title __CUSTOMMICROCONTROLLER's Class Diagram__\n

  package sud_tanj.com.icare {
    package sud_tanj.com.icare.Backend {
      package sud_tanj.com.icare.Backend.Microcontrollers {
        package sud_tanj.com.icare.Backend.Microcontrollers.CustomMicrocontroller {
          class ArduinoUnoCH340 {
              {static} + CH340_USB_PERMISSION : String
              {static} + CH340_USB_STATE : String
              {static} - arduinoUnoCH340 : ArduinoUnoCH340
              - ch34xUARTDriver : CH34xUARTDriver
              - usbListener : UsbListener
              - usbDevice : UsbDevice
              - jsonParser : JsonParser
              - usbAttached : Boolean
              - buffer : byte[]
              - bufferLength : int
              - baudRate : int
              - stopBit : byte
              - dataBit : byte
              - parity : byte
              - flowControl : byte
              {static} + getInstance()
              + ArduinoUnoCH340()
              + updateConfiguration()
              + onAttached()
              + onDetached()
              + onDispose()
              + run()
              + setBaudRate()
              + setStopBit()
              + setDataBit()
              + setParity()
              + setFlowControl()
          }
        }
      }
    }
  }
  

  package sud_tanj.com.icare {
    package sud_tanj.com.icare.Backend {
      package sud_tanj.com.icare.Backend.Microcontrollers {
        package sud_tanj.com.icare.Backend.Microcontrollers.CustomMicrocontroller {
          abstract class ESP8266 {
              {static} - urlListStatus : Map<String, Boolean>
              # jsonParser : JsonParser
              {static} - getJson : GetJson
              {static} # wifi : WifiManager
              {static} - esp8266List : List<ESP8266>
              {static} - urlList : List<String>
              + run()
              {static} + addURL()
              + ESP8266()
              {abstract} ~ onDataDownloaded()
              {static} + isServerReachable()
              {static} + getEsp8266List()
              {static} + getUrlList()
          }
        }
      }
    }
  }
  

  package sud_tanj.com.icare {
    package sud_tanj.com.icare.Backend {
      package sud_tanj.com.icare.Backend.Microcontrollers {
        package sud_tanj.com.icare.Backend.Microcontrollers.CustomMicrocontroller {
          class LolinESP8266 {
              {static} + LOLIN_URL : String
              {static} - lolinESP8266 : LolinESP8266
              {static} + getInstance()
              + LolinESP8266()
              ~ onDataDownloaded()
          }
        }
      }
    }
  }
  

  package sud_tanj.com.icare {
    package sud_tanj.com.icare.Backend {
      package sud_tanj.com.icare.Backend.Microcontrollers {
        package sud_tanj.com.icare.Backend.Microcontrollers.CustomMicrocontroller {
          class LolinESP8266Multi {
              {static} + LOLIN_URL : String
              {static} + NEW_IP : String
              - bruteForce : boolean
              {static} - lolinESP8266Multi : LolinESP8266Multi
              - ipAddress : List<String>
              - bruteForceAdded : boolean
              {static} + getInstance()
              + LolinESP8266Multi()
              ~ onDataDownloaded()
              + setBruteForce()
          }
        }
      }
    }
  }
  

  ArduinoUnoCH340 -up-|> OnUsbListener
  ArduinoUnoCH340 -up-|> BaseMicrocontroller
  ESP8266 -up-|> BaseMicrocontroller
  LolinESP8266 -up-|> ESP8266
  LolinESP8266Multi -up-|> ESP8266


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
